# hydroshare-ssl-nginx.conf

# limit app launches to 5/second per client. 
limit_req_zone $binary_remote_addr zone=applaunch:10m rate=5r/s;
 
# limit ALL downloads (regardless of client) to a rate of 5/second. 
# limit_req_zone download zone=download:1m rate=5r/s;

upstream backend {
   server CURRENT_VM;
}

geo $external {
  default 1;
  192.168.0.0/16 0;
  172.16.0.0/12 0;
  127.0.0.0/8 0;
  10.0.0.0/8 0;
  152.54.0.0/20 0;
}

server {
    listen          80;
    server_name     FQDN_OR_IP;

    # enable two watchdog URLS: outer and inner NGINX status
     
    location /whatzupdoc-outer { 
        if ($external) { 
            return 404; 
        } 
        stub_status; 
    } 

    location /whatzupdoc-inner { 
        if ($external) { 
            return 404; 
        } 
	proxy_pass http://CURRENT_VM; 
    } 

    location / { 
        rewrite ^/(.*)  https://FQDN_OR_IP/$1 permanent;
    } 
}

server {
    listen          443 ssl;
    server_name     FQDN_OR_IP;
    root            /system/static/; 

    if ($http_host != "FQDN_OR_IP") {
        rewrite ^/(.*)  https://FQDN_OR_IP/$1 permanent;
    }

    access_log      /var/log/nginx/access.log combined;
    error_log       /var/log/nginx/error.log error;

    sendfile off;
    proxy_request_buffering off; 
    proxy_buffering off; 
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;

    charset         utf-8;
    client_max_body_size 4096m;  # limit uploads to 4 GiB. 

    ssl_certificate         /hs-certs/SSL_CERT_FILE;
    ssl_certificate_key     /hs-certs/SSL_KEY_FILE;

    location /goaccess/ {
        try_files $uri /goaccess/report.html;
    }

    location /tracking/applaunch/ {
        if (-f $document_root/maintenance_on.html) {
            return 301 /maintenance_on.html;
        }
        limit_req zone=applaunch burst=50;  # choke django requests to 5/second with a total queue of 50
        proxy_pass https://CURRENT_VM; 
    }

    location /django_irods/download { 
        if (-f $document_root/maintenance_on.html) {
            return 301 /maintenance_on.html;
        }
        # limit_req zone=download burst=150;  # choke django requests to 5/second with a total queue of 150
	proxy_pass https://CURRENT_VM;  # needed for server switching code. 
    } 

    location / {
        if (-f $document_root/maintenance_on.html) {
            return 301 /maintenance_on.html;  # invoke error handling as defined below
        }
        # This is unrestricted by rate chokes. 
	proxy_pass https://CURRENT_VM;  # needed for server switching code. 
    }

    
    # return error 503 and custom error message
    error_page 503 @503_error;
    location @503_error {
        rewrite ^(.*)$ /server_error_on.html break;
    }
}
