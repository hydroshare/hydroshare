# This is the configuration of the outer switch that selects which
# instance of hydroshare to run. 
#
# This file should be named hydroshare-ssl-nginx.conf on that switch, 
# in the directory /home/hydro/hydroshare/nginx/config-files 
#
# Request chokes are implemented here rather than on the hydroshare instance, 
# so that this host is protected. Recent high-volume attacks against the
# switch have brought the switch down.  April 16, 2020 -- Alva Couch

# put a limit on the rate of requests made from one ip address. 
limit_req_zone $binary_remote_addr zone=applaunch:10m rate=5r/s;

upstream backend {
   server CURRENT_VM;
}

server {
    listen          80;
    server_name     FQDN_OR_IP;
    rewrite ^/(.*)  https://FQDN_OR_IP/$1 permanent;
}

server {
    listen          443 ssl;
    server_name     FQDN_OR_IP;
    root            /system/static/; 

    access_log      /var/log/nginx/access.log combined;
    error_log       /var/log/nginx/error.log debug;

    sendfile off;
    proxy_request_buffering off; 
    proxy_buffering off; 

    charset         utf-8;
    client_max_body_size 4096m;  # limit uploads to 4 GiB. 

    ssl_certificate         /hs-certs/SSL_CERT_FILE;
    ssl_certificate_key     /hs-certs/SSL_KEY_FILE;

    # This limits the number of app launches that can be made from a single IP address. 
    # At most 5 per second can be made, with a burst limit of 50 queued requests 
    # to be addressed at 5 per second. This allows classes that are using apps 
    # to simultaneously launch 50 instances, even if the class is using the same 
    # request IP address due to network address translation (common). 
    location /tracking/applaunch/ {
        if (-f $document_root/maintenance_on.html) {
            return 503;
        }
        limit_req zone=applaunch burst=50;
        proxy_pass https://CURRENT_VM; 
    }

    # all other url
    location / {
        if (-f $document_root/maintenance_on.html) {
            return 503;  # invoke error handling as defined below
        }
	proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
	proxy_pass https://CURRENT_VM;  # needed for server switching code. 
    }

    # return error 503 and custom error message for maintenance
    error_page 503 @maintenance;
    location @maintenance {
        rewrite ^(.*)$ /maintenance_on.html break;
    }
}
