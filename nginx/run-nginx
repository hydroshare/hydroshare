#!/usr/bin/env bash

# run-nginx
# Author: Michael Stealey <michael.j.stealey@gmail.com>

### Load Configuration Variables ###
NGINX_CONFIG_DIRECTORY='./config-files'
NGINX_DOCKER_IMG='hydroshare_nginx'
NGINX_DOCKER_CNTR='nginx'

display_usage() {
	echo "*** run-nginx control script ***"
	echo "usage: $0 maint_off   # removes maintenance page"
	echo "usage: $0 maint_on    # displays maintenance page"
	echo "usage: $0 restart     # restarts docker nginx"
	echo "usage: $0 start       # starts docker nginx"
	echo "usage: $0 stop        # stops docker nginx"
}

preflight_nginx() {
    echo "PREFLIGHT NGINX:"
    if [ "${USE_SSL,,}" = true ]; then
        yes | cp -rf ${NGINX_CONFIG_DIRECTORY}/hydroshare-ssl-nginx.conf.template ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
        sed -i 's/FQDN_OR_IP/'${FQDN_OR_IP}'/g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
        sed -i 's/SSL_CERT_FILE/'${SSL_CERT_FILE}'/g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
        sed -i 's/SSL_KEY_FILE/'${SSL_KEY_FILE}'/g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf;
    else
        yes | cp -rf ${NGINX_CONFIG_DIRECTORY}/hydroshare-nginx.conf.template ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
        sed -i 's/FQDN_OR_IP/'${FQDN_OR_IP}'/g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf;
    fi
    # Configure access based on USE_HTTP_AUTH
    if [ "${USE_HTTP_AUTH,,}" = true ]; then
        # check for existence of .htpasswd file
        if [[ ! -f ${HS_PATH}/nginx/.htpasswd ]]; then
            echo "ERROR: requires ${HS_PATH}/nginx/.htpasswd, run ${HS_PATH}/nginx/generate_htpasswd.exp first."
            exit 1;
        fi
        sed -i 's!\<AUTH_BASIC\>!auth_basic "Restricted Content"!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
        sed -i 's!\<AUTH_BASIC_USER_FILE\>!auth_basic_user_file /etc/nginx/.htpasswd!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
    else
        sed -i 's!\<AUTH_BASIC\>!# auth_basic "Restricted Content"!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
        sed -i 's!\<AUTH_BASIC_USER_FILE\>!# auth_basic_user_file /etc/nginx/.htpasswd!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
    fi

    cp -rf ${NGINX_CONFIG_DIRECTORY}/nginx.conf-default.template ${NGINX_CONFIG_DIRECTORY}/nginx.conf-default
    cp -fr Dockerfile.template Dockerfile

    sed -i 's!IRODS_DATA_URI!'${IRODS_DATA_URI}'!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
    sed -i 's!IRODS_USER_URI!'${IRODS_USER_URI}'!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
    sed -i 's!IRODS_CACHE_URI!'${IRODS_CACHE_URI}'!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf

    sed -i 's!IRODS_DATA_ROOT!'${IRODS_DATA_ROOT}'!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
    sed -i 's!IRODS_USER_ROOT!'${IRODS_USER_ROOT}'!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf
    sed -i 's!IRODS_CACHE_ROOT!'${IRODS_CACHE_ROOT}'!g' ${NGINX_CONFIG_DIRECTORY}/hs-nginx.conf

    sed -i 's!SENDFILE_IRODS_USER!'${SENDFILE_IRODS_USER}'!g' ${NGINX_CONFIG_DIRECTORY}/nginx.conf-default
    sed -i 's!SENDFILE_IRODS_GROUP!'${SENDFILE_IRODS_GROUP}'!g' ${NGINX_CONFIG_DIRECTORY}/nginx.conf-default

    sed -i 's!SENDFILE_IRODS_USER_ID!'${SENDFILE_IRODS_USER_ID}'!g' Dockerfile
    sed -i 's!SENDFILE_IRODS_GROUP_ID!'${SENDFILE_IRODS_GROUP_ID}'!g' Dockerfile
    sed -i 's!SENDFILE_IRODS_USER!'${SENDFILE_IRODS_USER}'!g' Dockerfile
    sed -i 's!SENDFILE_IRODS_GROUP!'${SENDFILE_IRODS_GROUP}'!g' Dockerfile

}

stop_nginx() {
    echo "STOP NGINX:"
    echo "  - REMOVE: container ${NGINX_DOCKER_CNTR}, image ${NGINX_DOCKER_IMG}"
    CHECK_NGINX_CID=`docker ps -a | tr -s ' ' | grep ${NGINX_DOCKER_CNTR} | cut -d ' ' -f 1`
    if [[ -n "${CHECK_NGINX_CID}" ]]; then
        docker stop ${NGINX_DOCKER_CNTR}
        docker rm -fv ${NGINX_DOCKER_CNTR}
    fi
    CHECK_NGINX_IMAGE=`docker images | tr -s ' ' | cut -d ' ' -f 1 | grep ${NGINX_DOCKER_IMG}`
    if [[ -n "${CHECK_NGINX_IMAGE}" ]]; then
        docker rmi -f ${NGINX_DOCKER_IMG}
    fi
}

start_nginx() {
    echo "START NGINX:"
    preflight_nginx
    # build hydroshare_nginx if it doesn't exist
    CHECK_NGINX_IMAGE=`docker images | tr -s ' ' | cut -d ' ' -f 1 | grep ${NGINX_DOCKER_IMG}`
    if [[ -z "${CHECK_NGINX_IMAGE}" ]]; then
        echo "  - docker build -t ${NGINX_DOCKER_IMG} ."
        docker build -t ${NGINX_DOCKER_IMG} .;
    else
        echo " - INFO: image ${NGINX_DOCKER_IMG} already exists";
    fi
    # Launch nginx as docker container nginx
    HYDROSHARE_CID=`docker-compose ps | grep hydroshare | tr -s ' ' | cut -d ' ' -f 1`
    CHECK_NGINX_CID=`docker ps -a | tr -s ' ' | grep ${NGINX_DOCKER_CNTR} | cut -d ' ' -f 1`
    if [[ -z "${CHECK_NGINX_CID}" ]]; then
        echo "  - docker run ${NGINX_DOCKER_IMG} as ${NGINX_DOCKER_CNTR}"
        docker run -d --name ${NGINX_DOCKER_CNTR} \
            --link ${HYDROSHARE_CID}:hydroshare \
            -p 80:80 -p 443:443 \
            --volume ${HOST_SSL_DIR}:/hs-certs \
            --volume ${IRODS_LOCAL_MOUNT}:${IRODS_DOCKER_MAP} \
            --volume ${HS_LOG_FILES}:/var/log/nginx \
            --volumes-from ${HYDROSHARE_CID} \
            -ti ${NGINX_DOCKER_IMG};
    else
        CHECK_NGINX_CID=`docker ps | tr -s ' ' | grep ${NGINX_DOCKER_CNTR} | cut -d ' ' -f 1`
        if [[ -z "${CHECK_NGINX_CID}" ]]; then
            echo "  - INFO: ${NGINX_DOCKER_CNTR} already exists but is not running, restarting the container"
            docker start ${NGINX_DOCKER_CNTR};
        else
            echo "  - INFO: ${NGINX_DOCKER_CNTR} already exists as CID: ${CHECK_NGINX_CID}, restart current container";
            docker stop ${NGINX_DOCKER_CNTR}
            sleep 1s
            docker start ${NGINX_DOCKER_CNTR};
        fi
    fi
}

restart_nginx() {
    echo "RESTART NGINX:"
    stop_nginx STOP
    start_nginx START
}

maint_on_nginx() {
    echo "MAINT ON:"
    echo "  - cp maintenance_on.html ../hydroshare/static/maintenance_on.html"
    cp maintenance_on.html ../hydroshare/static/maintenance_on.html
}

maint_off_nginx() {
    echo "MAINT OFF:"
    echo "  - rm ../hydroshare/static/maintenance_on.html"
    rm ../hydroshare/static/maintenance_on.html
}

### Display usage if exactly one argument is not provided ###
if [  $# -ne 1 ]
then
    display_usage
    exit 1
fi

case "$1" in
    restart) restart_nginx $1
        ;;
    start) start_nginx $1
        ;;
    stop) stop_nginx $1
        ;;
    maint_on) maint_on_nginx $1
        ;;
    maint_off) maint_off_nginx $1
        ;;
    *) display_usage
        ;;
esac

exit 0;
